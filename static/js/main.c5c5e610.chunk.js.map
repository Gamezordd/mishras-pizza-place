{"version":3,"sources":["Header/HeaderComponent.tsx","ReduxStore/ActionTypes.ts","ReduxStore/reducer.ts","ReduxStore/MainStore.ts","ReduxStore/Actions.ts","Body/Menu/CustomizeMenu/ChoiceComponent.tsx","Body/Menu/CustomizeMenu/CustomizeMenuComponent.tsx","Body/Menu/MenuCard/QuantityComponent.tsx","Body/Menu/MenuCard/MenuCard.tsx","Body/Menu/MenuBody.tsx","Body/Menu/MeatToggle/MeatToggle.tsx","Body/Menu/OptionsComponent.tsx","Body/Menu/MenuComponent.tsx","Body/Menu/constants.ts","Body/Cart/CartItem.tsx","Body/Cart/CartComponent.tsx","Body/BodyComponent.tsx","Footer/FooterComponent.tsx","Splash/SplashComponent.tsx","Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Jumbotron","className","POPULATE_MENU","ADDTO_CART","REMOVE_FROM_CART","UPDATE_CART_ITEM","UPDATE_FILTER","UPDATE_SORTING","initialState","data","cart","sortby","filterby","totalCost","totalItems","calcTotal","res","i","price","count","numerateItems","handleUpdate","id","item","ind","findIndex","splice","combinedReducer","state","action","type","ActionTypes","payload","temp","concat","newTotal","numItems","filter","pza","newData","Store","createStore","populateMenu","resp","addToCart","removeFromCart","updateCartItem","updateSorting","updateFilter","ChoiceComponent","props","isRadio","onSelection","length","ToggleButtonGroup","name","vertical","onChange","e","map","ToggleButton","variant","value","size","style","marginBottom","CustomizeMenu","connect","dispatch","loadMenu","Actions","itemId","useState","setSize","toppings","setToppings","hasError","setError","handleHide","hideModal","Modal","show","isOpen","onHide","textAlign","Body","Col","Row","baseData","items","x","color","Footer","Button","onClick","QuantityComponent","onInc","onDec","currValue","MenuCard","num","quantity","setQuantity","showCustomizer","setCustomizer","quantCounter","cartDelete","Card","Img","minHeight","minWidth","src","img_url","ImgOverlay","isVeg","Title","fontSize","rating","Array","apply","Math","floor","Text","description","float","some","MenuBody","xs","sm","lg","xl","paddingTop","paddingBottom","MeatToggle","status","document","getElementById","checked","onToggle","handleClick","sortOptions","Options","setSort","param","setNonVeg","isNonVeg","dropdownVal","setDropdown","height","Dropdown","Toggle","Menu","optn","Item","onSort","onFilter","MenuComponent","isLoading","setLoading","results","setResults","sortParam","fetchMenu","a","fetch","json","resjson","handleFilter","console","error","useEffect","val","handleSort","sort","b","Spinner","placeSelf","animation","nextPage","backgroundColor","borderColor","CartItem","updateCart","width","handleInc","handleDec","CartMain","onForward","onBack","BodyComponent","currPage","setPage","Container","SplashComponent","Main","splash","setSplash","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.c5c5e610.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\n// import './styles.css';\r\n\r\nexport const Header = () => {\r\n\treturn (\r\n\t\t<Jumbotron className=\"banner-style header-style\">\r\n\t\t\t<h1>Treflo Pizza Place</h1>\r\n\t\t\t<p>Shop from our selection of hand-tossed freshly baked pizzas</p>\r\n\t\t</Jumbotron>\r\n\t);\r\n};\r\n","export const POPULATE_MENU = \"POPULATE_MENU\";\r\nexport const ADDTO_CART = \"ADDTO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const UPDATE_CART_ITEM = \"UPDATE_CART_ITEM\";\r\nexport const UPDATE_FILTER = \"UPDATE_FILTER\";\r\nexport const UPDATE_SORTING = \"UPDATE_SORTING\";\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\n//cart:[{id:1, toppings:{'t1','t2'}}]\r\nconst initialState = {\r\n\tdata: null,\r\n\tcart: [],\r\n\tsortby: null,\r\n\tfilterby: null,\r\n\ttotalCost: 0,\r\n\ttotalItems: 0,\r\n};\r\n\r\ninterface IState {\r\n\tcart: any[];\r\n}\r\n\r\nconst calcTotal = (data: any[]) => {\r\n\tlet res = 0;\r\n\r\n\tfor (let i in data) {\r\n\t\tres += data[i].price * data[i].count;\r\n\t}\r\n\treturn res;\r\n};\r\n\r\nconst numerateItems = (data: any[]) => {\r\n\tlet res = 0;\r\n\r\n\tfor (let i in data) {\r\n\t\tres += data[i].count;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nconst handleUpdate = (id: number, item: any, cart: any[]) => {\r\n\tlet ind = cart.findIndex((i) => i.id === id);\r\n\tif (item.count === 0) {\r\n\t\tcart.splice(ind, 1);\r\n\t} else {\r\n\t\tcart[ind] = item;\r\n\t}\r\n\r\n\treturn cart;\r\n};\r\n\r\nconst MainReducer = (\r\n\tstate: IState = initialState,\r\n\taction: { type: String; payload: any }\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase ActionTypes.POPULATE_MENU:\r\n\t\t\treturn { ...state, data: action.payload };\r\n\r\n\t\tcase ActionTypes.ADDTO_CART: {\r\n\t\t\tconst { count } = action.payload;\r\n\t\t\tif (count > 0) {\r\n\t\t\t\tlet temp = state.cart.concat(action.payload);\r\n\t\t\t\tlet newTotal = calcTotal(temp);\r\n\t\t\t\tlet numItems = numerateItems(temp);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcart: temp,\r\n\t\t\t\t\ttotalCost: newTotal,\r\n\t\t\t\t\ttotalItems: numItems,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\tcase ActionTypes.REMOVE_FROM_CART: {\r\n\t\t\tlet temp = state.cart.filter((pza) => pza.id !== action.payload);\r\n\t\t\tlet newTotal = calcTotal(temp);\r\n\t\t\tlet numItems = numerateItems(temp);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcart: temp,\r\n\t\t\t\ttotalCost: newTotal,\r\n\t\t\t\ttotalItems: numItems,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase ActionTypes.UPDATE_CART_ITEM: {\r\n\t\t\tlet newData = handleUpdate(\r\n\t\t\t\taction.payload.id,\r\n\t\t\t\taction.payload.data,\r\n\t\t\t\tstate.cart\r\n\t\t\t);\r\n\t\t\tlet newTotal = calcTotal(state.cart);\r\n\t\t\tlet numItems = numerateItems(state.cart);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: { ...newData },\r\n\t\t\t\ttotalCost: newTotal,\r\n\t\t\t\ttotalItems: numItems,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase ActionTypes.UPDATE_FILTER:\r\n\t\t\treturn { ...state, filterby: action.payload };\r\n\r\n\t\tcase ActionTypes.UPDATE_SORTING:\r\n\t\t\treturn { ...state, sortby: action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n//combineReducers can be used below\r\nexport const combinedReducer = MainReducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport { combinedReducer } from \"./reducer\";\r\n\r\nexport const Store = createStore(combinedReducer);\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const populateMenu = (resp: any) => ({\r\n\ttype: ActionTypes.POPULATE_MENU,\r\n\tpayload: resp,\r\n});\r\n\r\nexport const addToCart = (item: any) => ({\r\n\ttype: ActionTypes.ADDTO_CART,\r\n\tpayload: item,\r\n});\r\n\r\nexport const removeFromCart = (id: any) => ({\r\n\ttype: ActionTypes.REMOVE_FROM_CART,\r\n\tpayload: id,\r\n});\r\n\r\nexport const updateCartItem = (id: number, data: any) => ({\r\n\ttype: ActionTypes.UPDATE_CART_ITEM,\r\n\tpayload: { id, data: { ...data } },\r\n});\r\n\r\nexport const updateSorting = (data: String) => ({\r\n\ttype: ActionTypes.UPDATE_SORTING,\r\n\tpayload: data,\r\n});\r\n\r\nexport const updateFilter = (data: boolean) => ({\r\n\ttype: ActionTypes.UPDATE_FILTER,\r\n\tpayload: data,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\tButton,\r\n\tButtonGroup,\r\n\tToggleButton,\r\n\tToggleButtonGroup,\r\n} from \"react-bootstrap\";\r\nexport {};\r\ninterface IProps {\r\n\tisRadio: boolean;\r\n\tdata: string[];\r\n\tonSelection: (res: string | string[]) => void;\r\n}\r\n\r\nexport const ChoiceComponent = (props: IProps) => {\r\n\tconst { isRadio, data, onSelection } = props;\r\n\tif (data.length <= 0) return <div></div>;\r\n\r\n\tif (isRadio) {\r\n\t\treturn (\r\n\t\t\t<ToggleButtonGroup\r\n\t\t\t\tname=\"single-select\"\r\n\t\t\t\ttype=\"radio\"\r\n\t\t\t\tvertical\r\n\t\t\t\tonChange={(e) => onSelection([].concat(e))}\r\n\t\t\t>\r\n\t\t\t\t{data.map((i: any, ind) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\t\t\tkey={\"121\" + ind}\r\n\t\t\t\t\t\t\tvalue={i.size ? i.size : i.name}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{i.size ? i.size : i.name}\r\n\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ToggleButtonGroup>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<ToggleButtonGroup\r\n\t\t\t\tvertical\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tname=\"multiple-select\"\r\n\t\t\t\tonChange={(e) => onSelection(e)}\r\n\t\t\t\tstyle={{ marginBottom: \"40px\" }}\r\n\t\t\t>\r\n\t\t\t\t{data.map((i: any, ind) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\t\t\tkey={\"1221\" + ind}\r\n\t\t\t\t\t\t\tvalue={i.size ? i.size : i.name}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{i.size ? i.size : i.name}\r\n\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ToggleButtonGroup>\r\n\t\t);\r\n\t}\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Modal, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"../../../ReduxStore\";\r\nimport { ChoiceComponent } from \"./ChoiceComponent\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdata: state.data,\r\n\t\tcart: state.cart,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloadMenu: (res: any) => dispatch(Actions.populateMenu(res)),\r\n\t\taddToCart: (item: any) => dispatch(Actions.addToCart(item)),\r\n\t\tremoveFromCart: (itemId: any) =>\r\n\t\t\tdispatch(Actions.removeFromCart(itemId)),\r\n\t};\r\n};\r\n\r\ninterface IProps {\r\n\tbaseData: any;\r\n\tisOpen: boolean;\r\n\thideModal: () => void;\r\n\taddToCart: (item: any) => void;\r\n}\r\n\r\nexport const CustomizeMenuNoRedux = (props: IProps) => {\r\n\tconst [size, setSize] = useState<string | string[] | null>(null);\r\n\tconst [toppings, setToppings] = useState<string | string[]>([]);\r\n\tconst [hasError, setError] = useState(false);\r\n\r\n\tconst handleAdding = () => {\r\n\t\tif (!size) {\r\n\t\t\tsetError(true);\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tsetError(false);\r\n\t\t}\r\n\t\tprops.addToCart({ ...props.baseData, size, toppings });\r\n\t\thandleHide();\r\n\t};\r\n\r\n\tconst handleHide = () => {\r\n\t\tsetError(false);\r\n\t\tsetSize(null);\r\n\t\tsetToppings([]);\r\n\t\tprops.hideModal();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tshow={props.isOpen}\r\n\t\t\tsize=\"sm\"\r\n\t\t\tonHide={() => {\r\n\t\t\t\thandleHide();\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Modal.Header style={{ textAlign: \"center\" }}>\r\n\t\t\t\t<h2>Customize</h2>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Row className=\"justify-content-center\">\r\n\t\t\t\t\t\t<h4>Select Size:</h4>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"justify-content-center\">\r\n\t\t\t\t\t\t<ChoiceComponent\r\n\t\t\t\t\t\t\tisRadio={props.baseData.size[0].isRadio}\r\n\t\t\t\t\t\t\tdata={props.baseData.size[0].items}\r\n\t\t\t\t\t\t\tonSelection={(x: string | string[]) => setSize(x)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t{hasError ? (\r\n\t\t\t\t\t\t\t<p style={{ color: \"red\" }}>Please select size</p>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<p>&nbsp;</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"pt-4 justify-content-center\">\r\n\t\t\t\t\t\t<h4>Select Toppings:</h4>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"justify-content-center\">\r\n\t\t\t\t\t\t<ChoiceComponent\r\n\t\t\t\t\t\t\tisRadio={props.baseData.toppings[0].isRadio}\r\n\t\t\t\t\t\t\tdata={props.baseData.toppings[0].items}\r\n\t\t\t\t\t\t\tonSelection={(x: string | string[]) =>\r\n\t\t\t\t\t\t\t\tsetToppings(x)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Col>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button onClick={() => handleAdding()} variant=\"danger\">\r\n\t\t\t\t\t<i className=\"fa fa-plus\" />\r\n\t\t\t\t\t&nbsp;&nbsp;Add To Cart\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport const CustomizeMenu = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(CustomizeMenuNoRedux);\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"../../../ReduxStore\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdata: state.data,\r\n\t\tcart: state.cart,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloadMenu: (res: any) => dispatch(Actions.populateMenu(res)),\r\n\t\taddToCart: (item: any) => dispatch(Actions.addToCart(item)),\r\n\t\tremoveFromCart: (itemId: any) =>\r\n\t\t\tdispatch(Actions.removeFromCart(itemId)),\r\n\t};\r\n};\r\n\r\ninterface IProps {\r\n\tonInc: () => void;\r\n\tonDec: () => void;\r\n\tcurrValue: number;\r\n}\r\n\r\nconst QuantityComponentNoRedux = (props: IProps) => {\r\n\tconst { onInc, onDec, currValue } = props;\r\n\r\n\treturn (\r\n\t\t<Row className=\"align-items-center justify-content-start m-0\">\r\n\t\t\t<i onClick={() => onInc()} className=\"fa fa-plus counter-icon\" />\r\n\t\t\t&nbsp;\r\n\t\t\t<h4 className=\"counter-disp\">{currValue}</h4>\r\n\t\t\t&nbsp;\r\n\t\t\t<i onClick={() => onDec()} className=\"fa fa-minus counter-icon\" />\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport const QuantityComponent = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(QuantityComponentNoRedux);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Actions from \"../../../ReduxStore/Actions\";\r\nimport Customizer from \"../CustomizeMenu\";\r\nimport { QuantityComponent } from \"./QuantityComponent\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdata: state.data,\r\n\t\tcart: state.cart,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloadMenu: (res: any) => dispatch(Actions.populateMenu(res)),\r\n\t\taddToCart: (item: any) => dispatch(Actions.addToCart(item)),\r\n\t\tremoveFromCart: (itemId: any) =>\r\n\t\t\tdispatch(Actions.removeFromCart(itemId)),\r\n\t};\r\n};\r\n\r\ninterface IProps {\r\n\taddToCart: (item: any) => void;\r\n\tremoveFromCart: (itemId: number) => void;\r\n\tpza: any;\r\n\tcart: any[];\r\n}\r\n\r\nconst MenuCardNoRedux = (props: IProps) => {\r\n\tconst { pza } = props;\r\n\tconst [quantity, setQuantity] = useState(1);\r\n\tconst [showCustomizer, setCustomizer] = useState(false);\r\n\r\n\t//console.log('wht: ', props);\r\n\r\n\tconst stars = (num: number) => {\r\n\t\tnum = num < 0 ? -num : num;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{Array.apply(null, Array(Math.floor(num))).map((i, ind) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tkey={\"11232\" + ind}\r\n\t\t\t\t\t\t\tclassName=\"fa fa-star\"\r\n\t\t\t\t\t\t\tstyle={{ color: \"#7e685a\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t{num - Math.floor(num) > 0 ? (\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName=\"fa fa-star-half\"\r\n\t\t\t\t\t\tstyle={{ color: \"#7e685a\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst quantCounter = (\r\n\t\t<Row className=\"align-items-center m-0\">\r\n\t\t\t<div className=\"quant-menu-container\">\r\n\t\t\t\t<QuantityComponent\r\n\t\t\t\t\tcurrValue={quantity}\r\n\t\t\t\t\tonInc={() => setQuantity(quantity + 1)}\r\n\t\t\t\t\tonDec={() =>\r\n\t\t\t\t\t\tquantity > 0 ? setQuantity(quantity - 1) : null\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => setCustomizer(true)}\r\n\t\t\t\tclassName=\"fa fa-cart-plus fa-2x counter-add-icon\"\r\n\t\t\t/>\r\n\t\t</Row>\r\n\t);\r\n\t// props.addToCart({...pza, count: quantity})\r\n\r\n\tconst cartDelete = (\r\n\t\t<Button\r\n\t\t\tsize=\"sm\"\r\n\t\t\tonClick={() => props.removeFromCart(pza.id)}\r\n\t\t\tvariant=\"danger\"\r\n\t\t\tclassName='quant-menu-container'\r\n\t\t>\r\n\t\t\tRemove\r\n\t\t</Button>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"menu-card\">\r\n\t\t\t<Customizer\r\n\t\t\t\thideModal={() => setCustomizer(false)}\r\n\t\t\t\tbaseData={{ ...pza, count: quantity }}\r\n\t\t\t\tisOpen={showCustomizer}\r\n\t\t\t/>\r\n\t\t\t<Card>\r\n\t\t\t\t<Card.Img\r\n\t\t\t\t\tstyle={{ minHeight: \"220px\", minWidth: \"189px\" }}\r\n\t\t\t\t\tsrc={pza.img_url}\r\n\t\t\t\t/>\r\n\t\t\t\t<Card.ImgOverlay>\r\n\t\t\t\t\t{pza.isVeg ? (\r\n\t\t\t\t\t\t<div className=\"veg-mark\"></div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"non-veg-mark\"></div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Card.ImgOverlay>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontSize: pza.name.length > 10 ? \"15px\" : \"20px\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{pza.name}\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t{stars(pza.rating)}\r\n\t\t\t\t\t<Card.Text style={{ fontSize: \"14px\" }}>\r\n\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t{pza.description}{\" \"}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t<Row className=\"justify-content-between\">\r\n\t\t\t\t\t\t<h5 className=\"price-tag\">₹&nbsp;{pza.price}</h5>\r\n\t\t\t\t\t\t<div style={{ float: \"right\" }}>\r\n\t\t\t\t\t\t\t{props.cart.some((i) => i.id === pza.id)\r\n\t\t\t\t\t\t\t\t? cartDelete\r\n\t\t\t\t\t\t\t\t: quantCounter}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const MenuCard = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(MenuCardNoRedux);\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { MenuCard } from \"./MenuCard/MenuCard\";\r\ninterface IProps {\r\n\tdata: any[];\r\n}\r\n\r\nexport const MenuBody = (props: IProps) => {\r\n\tif(props.data.length > 0){\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t{props.data.map((pza) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Col key={pza.id} xs={12} sm={6} lg={4} xl={3}>\r\n\t\t\t\t\t\t\t<MenuCard pza={pza} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n\t\r\n\treturn(\r\n\t\t<h2 style={{textAlign:'center', paddingTop:'20vh', paddingBottom:'20vh'}}>\r\n\t\t\tSomething went wrong, please try reloading.\r\n\t\t</h2>\r\n\t)\r\n\t\r\n};\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\ninterface IProps {\r\n\tonToggle?: (status: boolean) => void;\r\n}\r\n\r\nexport const MeatToggle = (props: IProps) => {\r\n\tfunction handleClick() {\r\n\t\t//@ts-ignore\r\n\t\tconst status = document.getElementById(\"meat-toggle\")?.checked;\r\n\t\tif (props.onToggle) {\r\n\t\t\tprops.onToggle(status);\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"content\">\r\n\t\t\t<label className=\"switch\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"meat-toggle\"\r\n\t\t\t\t\tonClick={() => handleClick()}\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"slider round\"></span>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Row, Dropdown, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"../../ReduxStore\";\r\nimport { MeatToggle } from \"./MeatToggle\";\r\nimport \"./styles.css\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdata: state.data,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloadMenu: (res: any) => dispatch(Actions.populateMenu(res)),\r\n\t\tsetSort: (param: String) => dispatch(Actions.updateSorting(param)),\r\n\t\tsetNonVeg: (isNonVeg: boolean) =>\r\n\t\t\tdispatch(Actions.updateFilter(isNonVeg)),\r\n\t};\r\n};\r\n\r\ninterface IProps {\r\n\tonSort: (param: string | null) => void;\r\n\tonFilter: (isNonVeg: boolean) => void;\r\n}\r\n\r\nconst sortOptions = [\"Price\", \"Rating\"];\r\n\r\nconst OptionsNoConnect = (props: IProps) => {\r\n\tconst [dropdownVal, setDropdown] = useState(\"Select\");\r\n\treturn (\r\n\t\t<Row\r\n\t\t\tstyle={{ height: \"130px\" }}\r\n\t\t\tclassName=\"justify-content-between px-4 align-items-center\"\r\n\t\t>\r\n\t\t\t<Col>\r\n\t\t\t\t<Row className='align-items-center' >\r\n\t\t\t\t\t<h5>Sort by: &nbsp;</h5>\r\n\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t<Dropdown.Toggle className=\"sort-dropdown\">\r\n\t\t\t\t\t\t\t{dropdownVal}\r\n\t\t\t\t\t\t</Dropdown.Toggle>\r\n\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t{sortOptions.map((optn, ind) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\tkey={\"123\" + ind}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tprops.onSort(optn);\r\n\t\t\t\t\t\t\t\t\t\t\tsetDropdown(optn);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{optn}\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t</Row>\r\n\t\t\t</Col>\r\n\t\t\t<Col>\r\n\t\t\t\t<Row className='justify-content-end align-items-center'>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<h4 className=\"meat-text\">Showing</h4> &nbsp; &nbsp;\r\n\t\t\t\t\t\t\t\t<MeatToggle\r\n\t\t\t\t\t\t\t\t\tonToggle={(status) => props.onFilter(status)}\r\n\t\t\t\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<h4 className=\"meat-text\">Pizzas</h4>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</Row>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport const Options = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(OptionsNoConnect);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"../../ReduxStore\";\r\nimport { MenuAPI } from \"./constants\";\r\nimport { MenuBody } from \"./MenuBody\";\r\nimport { Options } from \"./OptionsComponent\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdata: state.data,\r\n\t\tnumItems: state.totalItems,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloadMenu: (res: any) => dispatch(Actions.populateMenu(res)),\r\n\t};\r\n};\r\n\r\ninterface IProps {\r\n\tdata: any;\r\n\tnumItems: number;\r\n\tloadMenu: (res: any) => void;\r\n\tnextPage: () => void;\r\n}\r\n\r\nconst MenuComponentNoRedux = (props: IProps) => {\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst [results, setResults] = useState<any[]>([]);\r\n\tconst [sortParam, setSort] = useState<string|null>(null);\r\n\t\r\n\tconst fetchMenu = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await fetch(MenuAPI);\r\n\t\t\tlet resjson = await res.json();\r\n\t\t\tprops.loadMenu(resjson);\r\n\t\t\tsetResults(resjson);\r\n\r\n\t\t\t//set filter to veg initially\r\n\t\t\thandleFilter(false, resjson);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchMenu();\r\n\t\t\r\n\t}, []);\r\n\r\n\r\n\tconst handleFilter = (val: boolean, data: any[]) => {\r\n\t\tlet temp = data.filter((i: any) => i.isVeg !== val);\r\n\t\thandleSort(sortParam, temp);\r\n\t};\r\n\r\n\tconst handleSort = (val: string | null, data: any[]) => {\r\n\t\tsetSort(val);\r\n\t\tlet temp = data;\r\n\t\tif (val === \"Price\") {\r\n\t\t\ttemp.sort((a, b) => {\r\n\t\t\t\treturn a.price - b.price;\r\n\t\t\t});\r\n\t\t} else if (val === \"Rating\") {\r\n\t\t\ttemp.sort((a, b) => {\r\n\t\t\t\treturn b.rating - a.rating;\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetResults([...temp]);\r\n\t};\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t{Array.apply(null, Array(4)).map(function (i, ind) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Col key={'423'+ind} xs={12} sm={6} lg={4} xl={3}>\r\n\t\t\t\t\t\t\t<div className=\"menu-card\">\r\n\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\theight: \"300px\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: \"30%\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tplaceSelf: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#7e685a\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tanimation=\"border\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tplaceSelf: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#7e6851\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tLoading\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Options\r\n\t\t\t\tonFilter={(isNonVeg: boolean) => {handleFilter(isNonVeg, props.data)}}\r\n\t\t\t\tonSort={(val) => handleSort(val, results)}\r\n\t\t\t/>\r\n\t\t\t<MenuBody data={results} />\r\n\t\t\t<div className=\"next-btn\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={() => props.nextPage()}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: \"#afd275\",\r\n\t\t\t\t\t\tborderColor: \"#afd275\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tGo To Cart <i className=\"fa fa-chevron-right\" />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<div className=\"count-badge\">\r\n\t\t\t\t\t<div className=\"badge-count\">{props.numItems} </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport const MenuComponent = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(MenuComponentNoRedux);\r\n","export const MenuAPI = 'https://run.mocky.io/v3/ec196a02-aaf4-4c91-8f54-21e72f241b68';","import React, { Fragment } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"../../ReduxStore\";\r\nimport { QuantityComponent } from \"../Menu/MenuCard/QuantityComponent\";\r\nimport \"./styles.css\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdata: state.data,\r\n\t\tcart: state.cart,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloadMenu: (res: any) => dispatch(Actions.populateMenu(res)),\r\n\t\tupdateCart: (id: number, data: any) =>\r\n\t\t\tdispatch(Actions.updateCartItem(id, data)),\r\n\t};\r\n};\r\n\r\ninterface IProps {\r\n\titem: any;\r\n\tcart: any[];\r\n\tupdateCart: (id: number, data: any) => void;\r\n}\r\n\r\nconst CartItemNoRedux = (props: IProps) => {\r\n\tconst { item } = props;\r\n\r\n\tconst handleInc = (id: number) => {\r\n\t\tlet ind = props.cart.findIndex((i) => i.id === id);\r\n\t\tif (ind === -1) return;\r\n\t\tlet item = props.cart[ind];\r\n\t\titem.count++;\r\n\t\tprops.updateCart(id, item);\r\n\t};\r\n\r\n\tconst handleDec = (id: number) => {\r\n\t\tlet ind = props.cart.findIndex((i) => i.id === id);\r\n\t\tif (ind === -1) return;\r\n\t\tlet item = props.cart[ind];\r\n\t\tif (item.count > 0) {\r\n\t\t\titem.count--;\r\n\t\t\tprops.updateCart(id, item);\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Row className=\"mb-4 cart-item-container pt-4 pb-4\">\r\n\t\t\t<Col xs={12} lg={2}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tstyle={{ height: \"145px\", width: \"145px\" }}\r\n\t\t\t\t\tclassName=\"mx-auto\"\r\n\t\t\t\t\tsrc={item.img_url}\r\n\t\t\t\t/>\r\n\t\t\t</Col>\r\n\t\t\t<Col xs={12} lg={8}>\r\n\t\t\t\t<Row className=\"justify-content-between\">\r\n\t\t\t\t\t<Col xs={12} lg={5}>\r\n\t\t\t\t\t\t<h5 className=\"cart-item-title\">{item.name} </h5>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{/* <Col xs={12} lg={2}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Col> */}\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<p style={{ color: \"GrayText\" }}>\r\n\t\t\t\t<div className=\"quant-cart-container\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Row className='align-items-center'>\r\n\t\t\t\t\t\t\t<QuantityComponent\r\n\t\t\t\t\t\t\t\tcurrValue={item.count}\r\n\t\t\t\t\t\t\t\tonInc={() => handleInc(item.id)}\r\n\t\t\t\t\t\t\t\tonDec={() => handleDec(item.id)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-times' /> {item.size[0]}\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t</Row>\t\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</div> \r\n\t\t\t\t</p>\r\n\t\t\t\t{item.toppings.length > 0 ? (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<strong>Toppings:</strong>\r\n\t\t\t\t\t\t{item.toppings.map((i: string) => {\r\n\t\t\t\t\t\t\treturn <p className=\"p-0 m-0\">{i}</p>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t) : null}\r\n\t\t\t</Col>\r\n\t\t\t<Col xs={12} lg={2}>\r\n\t\t\t\t<h4 style={{ float: \"right\" }}>₹ {item.price * item.count}</h4>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport const CartItem = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(CartItemNoRedux);\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"../../ReduxStore\";\r\nimport { CartItem } from \"./CartItem\";\r\nimport \"./styles.css\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdata: state.data,\r\n\t\tcart: state.cart,\r\n\t\ttotalCost: state.totalCost,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloadMenu: (res: any) => dispatch(Actions.populateMenu(res)),\r\n\t\taddToCart: (item: any) => dispatch(Actions.addToCart(item)),\r\n\t\tremoveFromCart: (itemId: any) =>\r\n\t\t\tdispatch(Actions.removeFromCart(itemId)),\r\n\t};\r\n};\r\n\r\ninterface IProps {\r\n\tonBack: () => void;\r\n\tonForward: () => void;\r\n\tdata: any[];\r\n\tcart: any[];\r\n\ttotalCost: number;\r\n}\r\n\r\nconst CartMainNoRedux = (props: IProps) => {\r\n\tif (props.cart.length > 0) {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<h2>Shopping Cart:</h2>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"justify-content-between\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<h3 style={{ float: \"right\" }}>Total</h3>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t{props.cart.map((i) => {\r\n\t\t\t\t\t\t\treturn <CartItem item={i} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"checkout-row pt-4\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\tTotal: ₹ {props.totalCost + 0.18 * props.totalCost}{\" \"}\r\n\t\t\t\t\t\t\t(including 18% GST)\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={() => props.onForward()}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundColor: \"#afd275\",\r\n\t\t\t\t\t\t\t\tborderColor: \"#afd275\",\r\n\t\t\t\t\t\t\t\tfloat: \"right\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCheckout <i className=\"fa fa-usd\" />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<div className=\"prev-btn\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => props.onBack()}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: \"#afd275\",\r\n\t\t\t\t\t\t\tborderColor: \"#afd275\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-chevron-left\" />\r\n\t\t\t\t\t\t&nbsp;Back To Menu\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Row className=\"justify-content-center pt-5 pb-5\">\r\n\t\t\t\t<h4>Such Empty :(. Please Add A Pizza to Checkout.</h4>\r\n\t\t\t\t<div className=\"prev-btn\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => props.onBack()}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: \"#afd275\",\r\n\t\t\t\t\t\t\tborderColor: \"#afd275\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-chevron-left\" />\r\n\t\t\t\t\t\t&nbsp;Back To Menu\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n\t{\r\n\t}\r\n};\r\n\r\nexport const CartMain = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(CartMainNoRedux);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport Menu from \"./Menu\";\r\nimport CartMain from \"./Cart\";\r\n\r\nexport const BodyComponent = () => {\r\n\tconst [currPage, setPage] = useState(0);\r\n\t//page 0 - menu\r\n\t//page 1 - cart\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{currPage === 0 ? (\r\n\t\t\t\t<Menu nextPage={() => setPage(currPage + 1)} />\r\n\t\t\t) : currPage === 1 ? (\r\n\t\t\t\t<CartMain\r\n\t\t\t\t\tonBack={() => setPage(currPage - 1)}\r\n\t\t\t\t\tonForward={() => setPage(currPage + 1)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<div className=\"final-screen-body\">\r\n\t\t\t\t\t\t<h2>Order Placed! Thank you for shopping with us.</h2>\r\n\t\t\t\t\t\t<h4 style={{ color: \"GrayText\" }}>\r\n\t\t\t\t\t\t\tYou may close this window now\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { Jumbotron, Row } from \"react-bootstrap\";\r\nimport './styles.scss';\r\n\r\nexport const Footer = () => {\r\n\treturn (\r\n\t\t<Jumbotron className=\"banner-style footer-style\">\r\n\t\t\t<Row className='align-items-center justify-content-center'>\r\n\t\t\t<p>Created with &nbsp;</p>\r\n\t\t\t<div className=\"beating-heart-container\">\r\n\t\t\t\t<div className='fa fa-heart human-heart'/>\r\n\t\t\t</div>\r\n\t\t\t\t <p>&nbsp; for Treflo by Amartya Mishra</p>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t</Jumbotron>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./styles.css\";\r\n\r\ninterface IProps {\r\n\tonForward: () => void;\r\n}\r\n\r\nexport const SplashComponent = (props: IProps) => {\r\n\treturn (\r\n\t\t<div className=\"splash-background\">\r\n\t\t\t<h2 className=\"splash-text\">Order A Fresh Pizza with Treflo</h2>\r\n\t\t\t<Button onClick={() => props.onForward()}>Get Started</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport BodyComponent from \"./Body\";\r\nimport Footer from \"./Footer\";\r\nimport Splash from './Splash';\r\n\r\nconst Main = () => {\r\n\tconst [splash, setSplash] = useState(true);\r\n\tif(splash){\r\n\t\treturn(\r\n\t\t\t<Splash onForward={() => setSplash(false)} />\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<BodyComponent />\r\n\t\t\t<Footer />\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./Main\";\nfunction App() {\n\treturn <Main />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './ReduxStore';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}