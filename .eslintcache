[{"D:\\Apps\\ReactJS\\treflo_project\\src\\index.tsx":"1","D:\\Apps\\ReactJS\\treflo_project\\src\\Main.tsx":"2","D:\\Apps\\ReactJS\\treflo_project\\src\\Footer\\index.ts":"3","D:\\Apps\\ReactJS\\treflo_project\\src\\App.tsx":"4","D:\\Apps\\ReactJS\\treflo_project\\src\\Footer\\FooterComponent.tsx":"5","D:\\Apps\\ReactJS\\treflo_project\\src\\Header\\HeaderComponent.tsx":"6","D:\\Apps\\ReactJS\\treflo_project\\src\\Header\\index.ts":"7","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\index.ts":"8","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\BodyComponent.tsx":"9","D:\\Apps\\ReactJS\\treflo_project\\src\\ReduxStore\\reducer.ts":"10","D:\\Apps\\ReactJS\\treflo_project\\src\\ReduxStore\\ActionTypes.ts":"11","D:\\Apps\\ReactJS\\treflo_project\\src\\ReduxStore\\Actions.ts":"12","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MenuComponent.tsx":"13","D:\\Apps\\ReactJS\\treflo_project\\src\\ReduxStore\\MainStore.ts":"14","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\index.ts":"15","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MeatToggle\\MeatToggle.tsx":"16","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\OptionsComponent.tsx":"17","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MenuBody.tsx":"18","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MenuCard\\MenuCard.tsx":"19","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\CustomizeMenu\\CustomizeMenuComponent.tsx":"20","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\CustomizeMenu\\ChoiceComponent.tsx":"21","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Cart\\CartComponent.tsx":"22","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Cart\\CartItem.tsx":"23","D:\\Apps\\ReactJS\\treflo_project\\src\\reportWebVitals.ts":"24","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MenuCard\\QuantityComponent.tsx":"25","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MeatToggle\\index.tsx":"26","D:\\Apps\\ReactJS\\treflo_project\\src\\Splash\\SplashComponent.tsx":"27","D:\\Apps\\ReactJS\\treflo_project\\src\\ReduxStore\\index.ts":"28"},{"size":621,"mtime":1610534251369,"results":"29","hashOfConfig":"30"},{"size":292,"mtime":1610794788186,"results":"31","hashOfConfig":"30"},{"size":51,"mtime":1610528599964,"results":"32","hashOfConfig":"30"},{"size":142,"mtime":1610534251369,"results":"33","hashOfConfig":"30"},{"size":491,"mtime":1610800615848,"results":"34","hashOfConfig":"30"},{"size":326,"mtime":1610794685593,"results":"35","hashOfConfig":"30"},{"size":99,"mtime":1610528599964,"results":"36","hashOfConfig":"30"},{"size":57,"mtime":1610528599964,"results":"37","hashOfConfig":"30"},{"size":816,"mtime":1610804856379,"results":"38","hashOfConfig":"30"},{"size":2480,"mtime":1610785748995,"results":"39","hashOfConfig":"30"},{"size":288,"mtime":1610783250743,"results":"40","hashOfConfig":"30"},{"size":725,"mtime":1610794858535,"results":"41","hashOfConfig":"30"},{"size":3201,"mtime":1610796426738,"results":"42","hashOfConfig":"30"},{"size":151,"mtime":1610539316566,"results":"43","hashOfConfig":"30"},{"size":57,"mtime":1610538848499,"results":"44","hashOfConfig":"30"},{"size":588,"mtime":1610794685593,"results":"45","hashOfConfig":"30"},{"size":2085,"mtime":1610797888567,"results":"46","hashOfConfig":"30"},{"size":644,"mtime":1610796670152,"results":"47","hashOfConfig":"30"},{"size":3393,"mtime":1610799198075,"results":"48","hashOfConfig":"30"},{"size":2744,"mtime":1610804873743,"results":"49","hashOfConfig":"30"},{"size":1347,"mtime":1610804877706,"results":"50","hashOfConfig":"30"},{"size":2543,"mtime":1610794564532,"results":"51","hashOfConfig":"30"},{"size":2573,"mtime":1610799331135,"results":"52","hashOfConfig":"30"},{"size":425,"mtime":1610527390348,"results":"53","hashOfConfig":"30"},{"size":1317,"mtime":1610784536638,"results":"54","hashOfConfig":"30"},{"size":39,"mtime":1610569401158,"results":"55","hashOfConfig":"30"},{"size":405,"mtime":1610804892773,"results":"56","hashOfConfig":"30"},{"size":84,"mtime":1610538744738,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"s2xstt",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"D:\\Apps\\ReactJS\\treflo_project\\src\\index.tsx",[],["127","128"],"D:\\Apps\\ReactJS\\treflo_project\\src\\Main.tsx",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Footer\\index.ts",[],["129","130"],"D:\\Apps\\ReactJS\\treflo_project\\src\\App.tsx",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Footer\\FooterComponent.tsx",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Header\\HeaderComponent.tsx",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Header\\index.ts",["131"],"import { Header } from \"./HeaderComponent\";\r\n\r\nexport {Header as default} from './HeaderComponent';","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\index.ts",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\BodyComponent.tsx",["132","133"],"import React, { Fragment, useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport Menu from \"./Menu\";\r\nimport CartMain from \"./Cart\";\r\n\r\nexport const BodyComponent = () => {\r\n\tconst [currPage, setPage] = useState(0);\r\n\t//page 0 - menu\r\n\t//page 1 - cart\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{currPage === 0 ? (\r\n\t\t\t\t<Menu nextPage={() => setPage(currPage + 1)} />\r\n\t\t\t) : currPage === 1 ? (\r\n\t\t\t\t<CartMain\r\n\t\t\t\t\tonBack={() => setPage(currPage - 1)}\r\n\t\t\t\t\tonForward={() => setPage(currPage + 1)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<div className=\"final-screen-body\">\r\n\t\t\t\t\t\t<h2>Order Placed! Thank you for shopping with us.</h2>\r\n\t\t\t\t\t\t<h4 style={{ color: \"GrayText\" }}>\r\n\t\t\t\t\t\t\tYou may close this window now\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n","D:\\Apps\\ReactJS\\treflo_project\\src\\ReduxStore\\reducer.ts",["134"],"D:\\Apps\\ReactJS\\treflo_project\\src\\ReduxStore\\ActionTypes.ts",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\ReduxStore\\Actions.ts",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MenuComponent.tsx",["135"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"../../ReduxStore\";\r\nimport { MenuAPI } from \"./constants\";\r\nimport { MenuBody } from \"./MenuBody\";\r\nimport { Options } from \"./OptionsComponent\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdata: state.data,\r\n\t\tnumItems: state.totalItems,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloadMenu: (res: any) => dispatch(Actions.populateMenu(res)),\r\n\t};\r\n};\r\n\r\ninterface IProps {\r\n\tdata: any;\r\n\tnumItems: number;\r\n\tloadMenu: (res: any) => void;\r\n\tnextPage: () => void;\r\n}\r\n\r\nconst MenuComponentNoRedux = (props: IProps) => {\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst [results, setResults] = useState<any[]>([]);\r\n\tconst [sortParam, setSort] = useState<string|null>(null);\r\n\t\r\n\tconst fetchMenu = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await fetch(MenuAPI);\r\n\t\t\tlet resjson = await res.json();\r\n\t\t\tprops.loadMenu(resjson);\r\n\t\t\tsetResults(resjson);\r\n\r\n\t\t\t//set filter to veg initially\r\n\t\t\thandleFilter(false, resjson);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchMenu();\r\n\t\t\r\n\t}, []);\r\n\r\n\r\n\tconst handleFilter = (val: boolean, data: any[]) => {\r\n\t\tlet temp = data.filter((i: any) => i.isVeg !== val);\r\n\t\thandleSort(sortParam, temp);\r\n\t};\r\n\r\n\tconst handleSort = (val: string | null, data: any[]) => {\r\n\t\tsetSort(val);\r\n\t\tlet temp = data;\r\n\t\tif (val === \"Price\") {\r\n\t\t\ttemp.sort((a, b) => {\r\n\t\t\t\treturn a.price - b.price;\r\n\t\t\t});\r\n\t\t} else if (val === \"Rating\") {\r\n\t\t\ttemp.sort((a, b) => {\r\n\t\t\t\treturn b.rating - a.rating;\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetResults([...temp]);\r\n\t};\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t{Array.apply(null, Array(4)).map(function (i, ind) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Col key={'423'+ind} xs={12} sm={6} lg={4} xl={3}>\r\n\t\t\t\t\t\t\t<div className=\"menu-card\">\r\n\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\theight: \"300px\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: \"30%\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tplaceSelf: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#7e685a\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tanimation=\"border\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tplaceSelf: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#7e6851\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tLoading\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Options\r\n\t\t\t\tonFilter={(isNonVeg: boolean) => {handleFilter(isNonVeg, props.data)}}\r\n\t\t\t\tonSort={(val) => handleSort(val, results)}\r\n\t\t\t/>\r\n\t\t\t<MenuBody data={results} />\r\n\t\t\t<div className=\"next-btn\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={() => props.nextPage()}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: \"#afd275\",\r\n\t\t\t\t\t\tborderColor: \"#afd275\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tGo To Cart <i className=\"fa fa-chevron-right\" />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<div className=\"count-badge\">\r\n\t\t\t\t\t<div className=\"badge-count\">{props.numItems} </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport const MenuComponent = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(MenuComponentNoRedux);\r\n",["136","137"],"D:\\Apps\\ReactJS\\treflo_project\\src\\ReduxStore\\MainStore.ts",["138"],"import {applyMiddleware, createStore} from 'redux';\r\n\r\nimport {combinedReducer} from './reducer';\r\n\r\nexport const Store = createStore(combinedReducer);",["139","140"],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\index.ts",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MeatToggle\\MeatToggle.tsx",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\OptionsComponent.tsx",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MenuBody.tsx",["141"],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MenuCard\\MenuCard.tsx",["142"],"import React, { useState } from \"react\";\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Actions from \"../../../ReduxStore/Actions\";\r\nimport Customizer from \"../CustomizeMenu\";\r\nimport { QuantityComponent } from \"./QuantityComponent\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdata: state.data,\r\n\t\tcart: state.cart,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloadMenu: (res: any) => dispatch(Actions.populateMenu(res)),\r\n\t\taddToCart: (item: any) => dispatch(Actions.addToCart(item)),\r\n\t\tremoveFromCart: (itemId: any) =>\r\n\t\t\tdispatch(Actions.removeFromCart(itemId)),\r\n\t};\r\n};\r\n\r\ninterface IProps {\r\n\taddToCart: (item: any) => void;\r\n\tremoveFromCart: (itemId: number) => void;\r\n\tpza: any;\r\n\tcart: any[];\r\n}\r\n\r\nconst MenuCardNoRedux = (props: IProps) => {\r\n\tconst { pza } = props;\r\n\tconst [quantity, setQuantity] = useState(1);\r\n\tconst [showCustomizer, setCustomizer] = useState(false);\r\n\r\n\t//console.log('wht: ', props);\r\n\r\n\tconst stars = (num: number) => {\r\n\t\tnum = num < 0 ? -num : num;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{Array.apply(null, Array(Math.floor(num))).map((i, ind) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tkey={\"11232\" + ind}\r\n\t\t\t\t\t\t\tclassName=\"fa fa-star\"\r\n\t\t\t\t\t\t\tstyle={{ color: \"#7e685a\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t{num - Math.floor(num) > 0 ? (\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName=\"fa fa-star-half\"\r\n\t\t\t\t\t\tstyle={{ color: \"#7e685a\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst quantCounter = (\r\n\t\t<Row className=\"align-items-center m-0\">\r\n\t\t\t<div className=\"quant-menu-container\">\r\n\t\t\t\t<QuantityComponent\r\n\t\t\t\t\tcurrValue={quantity}\r\n\t\t\t\t\tonInc={() => setQuantity(quantity + 1)}\r\n\t\t\t\t\tonDec={() =>\r\n\t\t\t\t\t\tquantity > 0 ? setQuantity(quantity - 1) : null\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => setCustomizer(true)}\r\n\t\t\t\tclassName=\"fa fa-cart-plus fa-2x counter-add-icon\"\r\n\t\t\t/>\r\n\t\t</Row>\r\n\t);\r\n\t// props.addToCart({...pza, count: quantity})\r\n\r\n\tconst cartDelete = (\r\n\t\t<Button\r\n\t\t\tsize=\"sm\"\r\n\t\t\tonClick={() => props.removeFromCart(pza.id)}\r\n\t\t\tvariant=\"danger\"\r\n\t\t\tclassName='quant-menu-container'\r\n\t\t>\r\n\t\t\tRemove\r\n\t\t</Button>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"menu-card\">\r\n\t\t\t<Customizer\r\n\t\t\t\thideModal={() => setCustomizer(false)}\r\n\t\t\t\tbaseData={{ ...pza, count: quantity }}\r\n\t\t\t\tisOpen={showCustomizer}\r\n\t\t\t/>\r\n\t\t\t<Card>\r\n\t\t\t\t<Card.Img\r\n\t\t\t\t\tstyle={{ minHeight: \"220px\", minWidth: \"189px\" }}\r\n\t\t\t\t\tsrc={pza.img_url}\r\n\t\t\t\t/>\r\n\t\t\t\t<Card.ImgOverlay>\r\n\t\t\t\t\t{pza.isVeg ? (\r\n\t\t\t\t\t\t<div className=\"veg-mark\"></div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"non-veg-mark\"></div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Card.ImgOverlay>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontSize: pza.name.length > 10 ? \"15px\" : \"20px\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{pza.name}\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t{stars(pza.rating)}\r\n\t\t\t\t\t<Card.Text style={{ fontSize: \"14px\" }}>\r\n\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t{pza.description}{\" \"}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t<Row className=\"justify-content-between\">\r\n\t\t\t\t\t\t<h5 className=\"price-tag\">₹&nbsp;{pza.price}</h5>\r\n\t\t\t\t\t\t<div style={{ float: \"right\" }}>\r\n\t\t\t\t\t\t\t{props.cart.some((i) => i.id === pza.id)\r\n\t\t\t\t\t\t\t\t? cartDelete\r\n\t\t\t\t\t\t\t\t: quantCounter}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const MenuCard = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(MenuCardNoRedux);\r\n","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\CustomizeMenu\\CustomizeMenuComponent.tsx",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\CustomizeMenu\\ChoiceComponent.tsx",["143","144","145"],"import React, { useState } from \"react\";\r\nimport {\r\n\tButton,\r\n\tButtonGroup,\r\n\tToggleButton,\r\n\tToggleButtonGroup,\r\n} from \"react-bootstrap\";\r\nexport {};\r\ninterface IProps {\r\n\tisRadio: boolean;\r\n\tdata: string[];\r\n\tonSelection: (res: string | string[]) => void;\r\n}\r\n\r\nexport const ChoiceComponent = (props: IProps) => {\r\n\tconst { isRadio, data, onSelection } = props;\r\n\tif (data.length <= 0) return <div></div>;\r\n\r\n\tif (isRadio) {\r\n\t\treturn (\r\n\t\t\t<ToggleButtonGroup\r\n\t\t\t\tname=\"single-select\"\r\n\t\t\t\ttype=\"radio\"\r\n\t\t\t\tvertical\r\n\t\t\t\tonChange={(e) => onSelection([].concat(e))}\r\n\t\t\t>\r\n\t\t\t\t{data.map((i: any, ind) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\t\t\tkey={\"121\" + ind}\r\n\t\t\t\t\t\t\tvalue={i.size ? i.size : i.name}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{i.size ? i.size : i.name}\r\n\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ToggleButtonGroup>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<ToggleButtonGroup\r\n\t\t\t\tvertical\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tname=\"multiple-select\"\r\n\t\t\t\tonChange={(e) => onSelection(e)}\r\n\t\t\t\tstyle={{ marginBottom: \"40px\" }}\r\n\t\t\t>\r\n\t\t\t\t{data.map((i: any, ind) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\t\t\tkey={\"1221\" + ind}\r\n\t\t\t\t\t\t\tvalue={i.size ? i.size : i.name}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{i.size ? i.size : i.name}\r\n\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ToggleButtonGroup>\r\n\t\t);\r\n\t}\r\n};\r\n","D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Cart\\CartComponent.tsx",["146","147"],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Cart\\CartItem.tsx",["148"],"import React, { Fragment } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"../../ReduxStore\";\r\nimport { QuantityComponent } from \"../Menu/MenuCard/QuantityComponent\";\r\nimport \"./styles.css\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdata: state.data,\r\n\t\tcart: state.cart,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloadMenu: (res: any) => dispatch(Actions.populateMenu(res)),\r\n\t\tupdateCart: (id: number, data: any) =>\r\n\t\t\tdispatch(Actions.updateCartItem(id, data)),\r\n\t};\r\n};\r\n\r\ninterface IProps {\r\n\titem: any;\r\n\tcart: any[];\r\n\tupdateCart: (id: number, data: any) => void;\r\n}\r\n\r\nconst CartItemNoRedux = (props: IProps) => {\r\n\tconst { item } = props;\r\n\r\n\tconst handleInc = (id: number) => {\r\n\t\tlet ind = props.cart.findIndex((i) => i.id === id);\r\n\t\tif (ind === -1) return;\r\n\t\tlet item = props.cart[ind];\r\n\t\titem.count++;\r\n\t\tprops.updateCart(id, item);\r\n\t};\r\n\r\n\tconst handleDec = (id: number) => {\r\n\t\tlet ind = props.cart.findIndex((i) => i.id === id);\r\n\t\tif (ind === -1) return;\r\n\t\tlet item = props.cart[ind];\r\n\t\tif (item.count > 0) {\r\n\t\t\titem.count--;\r\n\t\t\tprops.updateCart(id, item);\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Row className=\"mb-4 cart-item-container pt-4 pb-4\">\r\n\t\t\t<Col xs={12} lg={2}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tstyle={{ height: \"145px\", width: \"145px\" }}\r\n\t\t\t\t\tclassName=\"mx-auto\"\r\n\t\t\t\t\tsrc={item.img_url}\r\n\t\t\t\t/>\r\n\t\t\t</Col>\r\n\t\t\t<Col xs={12} lg={8}>\r\n\t\t\t\t<Row className=\"justify-content-between\">\r\n\t\t\t\t\t<Col xs={12} lg={5}>\r\n\t\t\t\t\t\t<h5 className=\"cart-item-title\">{item.name} </h5>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{/* <Col xs={12} lg={2}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Col> */}\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<p style={{ color: \"GrayText\" }}>\r\n\t\t\t\t<div className=\"quant-cart-container\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Row className='align-items-center'>\r\n\t\t\t\t\t\t\t<QuantityComponent\r\n\t\t\t\t\t\t\t\tcurrValue={item.count}\r\n\t\t\t\t\t\t\t\tonInc={() => handleInc(item.id)}\r\n\t\t\t\t\t\t\t\tonDec={() => handleDec(item.id)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-times' /> {item.size[0]}\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t</Row>\t\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</div> \r\n\t\t\t\t</p>\r\n\t\t\t\t{item.toppings.length > 0 ? (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<strong>Toppings:</strong>\r\n\t\t\t\t\t\t{item.toppings.map((i: string) => {\r\n\t\t\t\t\t\t\treturn <p className=\"p-0 m-0\">{i}</p>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t) : null}\r\n\t\t\t</Col>\r\n\t\t\t<Col xs={12} lg={2}>\r\n\t\t\t\t<h4 style={{ float: \"right\" }}>₹ {item.price * item.count}</h4>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport const CartItem = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(CartItemNoRedux);\r\n","D:\\Apps\\ReactJS\\treflo_project\\src\\reportWebVitals.ts",[],["149","150"],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MenuCard\\QuantityComponent.tsx",["151"],"D:\\Apps\\ReactJS\\treflo_project\\src\\Body\\Menu\\MeatToggle\\index.tsx",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\Splash\\SplashComponent.tsx",[],"D:\\Apps\\ReactJS\\treflo_project\\src\\ReduxStore\\index.ts",[],["152","153"],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"154","replacedBy":"158"},{"ruleId":"156","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":10,"nodeType":"162","messageId":"163","endLine":1,"endColumn":16},{"ruleId":"160","severity":1,"message":"164","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"165","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":66,"column":56,"nodeType":"168","messageId":"169","endLine":66,"endColumn":58},{"ruleId":"170","severity":1,"message":"171","line":52,"column":5,"nodeType":"172","endLine":52,"endColumn":7,"suggestions":"173"},{"ruleId":"154","replacedBy":"174"},{"ruleId":"156","replacedBy":"175"},{"ruleId":"160","severity":1,"message":"176","line":1,"column":9,"nodeType":"162","messageId":"163","endLine":1,"endColumn":24},{"ruleId":"154","replacedBy":"177"},{"ruleId":"156","replacedBy":"178"},{"ruleId":"160","severity":1,"message":"179","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":17},{"ruleId":"160","severity":1,"message":"180","line":2,"column":24,"nodeType":"162","messageId":"163","endLine":2,"endColumn":27},{"ruleId":"160","severity":1,"message":"181","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"165","line":3,"column":2,"nodeType":"162","messageId":"163","endLine":3,"endColumn":8},{"ruleId":"160","severity":1,"message":"182","line":4,"column":2,"nodeType":"162","messageId":"163","endLine":4,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":106,"column":2,"nodeType":"185","messageId":"186","endLine":107,"endColumn":3},{"ruleId":"187","severity":1,"message":"188","line":106,"column":2,"nodeType":"185","messageId":"189","endLine":107,"endColumn":3},{"ruleId":"190","severity":1,"message":"191","line":54,"column":5,"nodeType":"192","endLine":58,"endColumn":7},{"ruleId":"154","replacedBy":"193"},{"ruleId":"156","replacedBy":"194"},{"ruleId":"160","severity":1,"message":"180","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":13},{"ruleId":"154","replacedBy":"195"},{"ruleId":"156","replacedBy":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],["197"],["198"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMenu'. Either include it or remove the dependency array.","ArrayExpression",["199"],["197"],["198"],"'applyMiddleware' is defined but never used.",["197"],["198"],"'connect' is defined but never used.","'Col' is defined but never used.","'useState' is defined but never used.","'ButtonGroup' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["197"],["198"],["197"],["198"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},"Update the dependencies array to be: [fetchMenu]",{"range":"202","text":"203"},[1288,1290],"[fetchMenu]"]